{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pedro/Documents/GitHub/NLW-4-React-Trail/src/components/Countdown.tsx\";\nimport { useContext } from 'react';\nimport { CountdownContext } from '../contexts/CountdownContext';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  const {\n    minutes,\n    seconds,\n    hasFinished,\n    isActive,\n    startCountdown,\n    resetCountdown\n  } = useContext(CountdownContext);\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [console.log(minuteRight), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        onClick: resetCountdown,\n        children: \"Abandonar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/pedro/Documents/GitHub/NLW-4-React-Trail/src/components/Countdown.tsx"],"names":["useContext","CountdownContext","styles","Countdown","minutes","seconds","hasFinished","isActive","startCountdown","resetCountdown","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","countdownContainer","console","log","countdownButton","countdownButtonActive"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAGA,OAAOC,MAAP,MAAmB,2CAAnB;AAIA,OAAO,SAASC,SAAT,GAAqB;AAExB,QAAM;AACEC,IAAAA,OADF;AAEEC,IAAAA,OAFF;AAGEC,IAAAA,WAHF;AAIEC,IAAAA,QAJF;AAKEC,IAAAA,cALF;AAMEC,IAAAA;AANF,MAODT,UAAU,CAACC,gBAAD,CAPf;AASA,QAAM,CAACS,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACR,OAAD,CAAN,CAAgBS,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BJ,MAAM,CAACP,OAAD,CAAN,CAAgBQ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AAGA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACe,kBAAvB;AAAA,8BACI;AAAA,mBACKC,OAAO,CAACC,GAAR,CAAYR,WAAZ,CADL,eAEI;AAAA,oBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,gCACI;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAcKV,WAAW,gBACP;AACA,MAAA,QAAQ,MADR;AAEA,MAAA,SAAS,EAAGJ,MAAM,CAACkB,eAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,gBASR;AAAA,gBACKb,QAAQ,gBACZ;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,SAAS,EAAG,GAAEL,MAAM,CAACkB,eAAgB,IAAGlB,MAAM,CAACmB,qBAAsB,EAFrE;AAGA,QAAA,OAAO,EAAEZ,cAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADY,gBAYb;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,SAAS,EAAEP,MAAM,CAACkB,eAFlB;AAGA,QAAA,OAAO,EAAEZ,cAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA,qBAvBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoDH","sourcesContent":["import { useContext } from 'react';\nimport { CountdownContext } from '../contexts/CountdownContext'\n\n\nimport styles from '../styles/components/Countdown.module.css'\n\n\n\nexport function Countdown() {\n\n    const { \n            minutes,\n            seconds,\n            hasFinished,\n            isActive,\n            startCountdown,\n            resetCountdown\n     } = useContext(CountdownContext)\n\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n\n    return (\n        <div>\n            <div className={styles.countdownContainer}>\n                <div>\n                    {console.log(minuteRight)}\n                    <span>{minuteLeft}</span>\n                    <span>{minuteRight}</span>\n                </div>\n                <span>:</span>\n                <div>\n                    <span>{secondLeft}</span>\n                    <span>{secondRight}</span>\n                </div>\n            </div>\n\n            {hasFinished ? (\n                 <button\n                 disabled\n                 className= {styles.countdownButton}\n                 >\n                 \n                 Ciclo encerrado\n                </button>\n            ):(\n                <>\n                    {isActive? (\n                 <button\n                 type='button'\n                 className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n                 onClick={resetCountdown}\n                 >\n                 \n                    Abandonar um ciclo\n                </button>\n                ):(\n                \n\n                <button\n                type='button'\n                className={styles.countdownButton}\n                onClick={startCountdown}\n                >\n                Iniciar um ciclo\n\n                </button>\n                )}\n\n                </>\n            )}\n        \n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}