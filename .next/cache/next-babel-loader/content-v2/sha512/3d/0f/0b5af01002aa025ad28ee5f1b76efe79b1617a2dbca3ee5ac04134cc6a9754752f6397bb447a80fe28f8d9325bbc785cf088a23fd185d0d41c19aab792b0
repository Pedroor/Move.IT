{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pedro/Documents/GitHub/NLW-4-React-Trail/src/components/Countdown.tsx\";\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nlet countdownTimeout;\nexport function Countdown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(25 * 60);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const {\n    0: hasFinished,\n    1: setHasFinished\n  } = useState(false);\n  const minutes = Math.floor(time) / 60;\n  const seconds = time % 60;\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n  function startCountdown() {\n    console.log(\"INICIO\", isActive);\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    console.log(isActive);\n    setTime(0.2 * 60);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), hasFinished && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n      onClick: resetCountdown,\n      children: \"Abandonar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n      onClick: resetCountdown,\n      children: \"Abandonar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/pedro/Documents/GitHub/NLW-4-React-Trail/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","countdownTimeout","Countdown","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","startCountdown","console","log","resetCountdown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css'\n\nlet countdownTimeout: NodeJS.Timeout;\n\nexport function Countdown() {\n    const [time, setTime] = useState(25 * 60);\n    const [isActive, setIsActive] = useState(false);\n    const [hasFinished, setHasFinished] = useState(false);\n\n    const minutes = Math.floor(time) / 60;\n    const seconds = time % 60;\n\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n    function startCountdown() {\n        console.log(\"INICIO\",isActive)\n        setIsActive(true);\n\n    }\n    function resetCountdown(){\n        clearTimeout(countdownTimeout);\n        setIsActive(false)\n        console.log(isActive)\n        setTime(0.2*60)\n    }\n\n    useEffect(() => {\n        if (isActive && time > 0) {\n           countdownTimeout = setTimeout(() => {\n                setTime(time - 1);\n            }, 1000)\n        }else if (isActive && time ===0){\n            setHasFinished(true);\n            setIsActive(false);\n        }\n    }, [isActive, time])\n\n    return (\n        <div>\n            <div className={styles.countdownContainer}>\n                <div>\n                    <span>{minuteLeft}</span>\n                    <span>{minuteRight}</span>\n                </div>\n                <span>:</span>\n                <div>\n                    <span>{secondLeft}</span>\n                    <span>{secondRight}</span>\n                </div>\n            </div>\n\n            {hasFinished && (\n                 <button\n                 type='button'\n                 className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n                 onClick={resetCountdown}\n                 >\n                 \n                 Abandonar um ciclo\n                </button>\n            )}\n            {isActive? (\n                 <button\n                 type='button'\n                 className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n                 onClick={resetCountdown}\n                 >\n                 \n                 Abandonar um ciclo\n             </button>\n            ):(\n              \n\n                <button\n                type='button'\n                className={styles.countdownButton}\n                onClick={startCountdown}\n                >\n                Iniciar um ciclo\n\n                </button>\n            )}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}